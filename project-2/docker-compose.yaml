version: '3.8'

services:
  api-service:
    image: adityakha/grepsr-api:latest
    # build: ./api-service
    container_name: api-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=myapp
    depends_on:
      database:
        condition: service_healthy

  worker-service:
    image: adityakha/grepsr-worker:latest
    # build: ./worker-service
    environment:
      - DB_HOST=database
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=myapp
      - QUEUE_HOST=queue
    depends_on:
      - database
      - queue

  database:
    image: postgres:13
    container_name: database
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=myapp
    volumes:
      - ./database/database-data:/var/lib/postgresql/data
      - ./database/database-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend-service:
    image: adityakha/grepsr-frontend:latest
    # build: ./frontend-service
    ports:
      - "80:80"
    depends_on:
      - api-service
    
  queue:
    image: redis:6-alpine
    ports:
      - "6379:6379"